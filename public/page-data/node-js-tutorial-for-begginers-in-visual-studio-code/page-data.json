{"componentChunkName":"component---src-components-blog-post-layout-js","path":"/node-js-tutorial-for-begginers-in-visual-studio-code","result":{"data":{"wordpressPost":{"slug":"node-js-tutorial-for-begginers-in-visual-studio-code","title":"Node.js Tutorial for Beginners in Visual Studio Code","content":"<p>With the evolution of web development, faster and better technologies are coming day by day to enhance our workflow. <a href=\"https://nodejs.org/en/\">Node.js</a> is one of them.</p>\n<p>Previously, JavaScript programming language was only restricted inside a client-side web browser environment. But with the advent of Node.js, it provides us the ability to execute JavaScript code on the server.</p>\n<p>This significant invention opens up a door for hundreds of possibilities for JavaScript front-end developers. Now, you don&#8217;t have to learn a separate language in order to become a full-stack developer. You can simply use your existing JavaScript skills on both front-end as well as the back-end of a website.</p>\n<p>This tutorial will cover the “What, Why and How” for beginners who are completely unfamiliar with the word Node.js. So, let’s jump into the actual content of this article to understand it.</p>\n<p><strong>What is Node.js?</strong></p>\n<p><img class=\"alignnone size-large wp-image-1226\" src=\"http://practice.codingsrc.com/wp-content/uploads/2020/03/nodejs-1024x493.png\" alt=\"\" width=\"1024\" height=\"493\" srcset=\"https://practice.codingsrc.com/wp-content/uploads/2020/03/nodejs-1024x493.png 1024w, https://practice.codingsrc.com/wp-content/uploads/2020/03/nodejs-300x144.png 300w, https://practice.codingsrc.com/wp-content/uploads/2020/03/nodejs-768x369.png 768w, https://practice.codingsrc.com/wp-content/uploads/2020/03/nodejs.png 1366w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p>Different web browsers use some kind of an engine to understand the code written in JavaScript programming language. Google Chrome uses “<a href=\"https://en.wikipedia.org/wiki/V8_(JavaScript_engine)\">V8</a>”, Microsoft Edge has its own “<a href=\"https://en.wikipedia.org/wiki/Chakra_(JavaScript_engine)\">Chakra</a>” while Mozilla Firefox is packed with “<a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey\">SpiderMonkey</a>”.</p>\n<p>The idea behind the development of Node.js is that a software engineer named <a href=\"https://github.com/ry\">Ryan Dahl</a> wants to use the engine of web browsers for any kind of JavaScript-based software development. So, he reviewed the pros and cons of different browser engines and found that Chrome’s V8 is way better than its competitors. He decided to use it for his ambitious project.</p>\n<p>Ryan Dahl uses C++ programming language to create a runtime environment for JavaScript that is completely built on top of Google Chrome’s V8 engine. He named this new project “<a href=\"https://nodejs.org/en/\">Node.js</a>”. Now, through Node.js you can use JavaScript code to create a website or a full-fledged desktop application, the ball is in your court now.</p>\n<p><strong>What can I do with it?</strong></p>\n<p>Mostly Node.js is suitable for creating real-time applications like online games or chat systems. But, in general, it can be used for any kind of software development. It provides complete flexibility for creating a Content Management System (CMS), Blog, Social media or an eCommerce store.</p>\n<p>A lot of companies prefer Node.js for developing their RESTful API’s. The reason is simple, unlike other web programming languages or frameworks it supports non-blocking asynchronous programming. In turn, it makes our apps very memory efficient.</p>\n<p><strong>Let&#8217;s Setup Node.js</strong></p>\n<p>To start writing server-side code in JavaScript we first need to download and then install Node.js on our computer system. You can use their <a href=\"https://nodejs.org/en/\">official website</a> to download the original software.</p>\n<p>On their home page, you might have noticed two buttons. One for the “LTS” version and the other one is for the “Current” version. In most cases, we only need to download the LTS (Long Term Support) version because it is very stable. But, if you want to try bleeding-edge features of Node.js then I would recommend you to install its “Current” release.</p>\n<p>A point to be noted is that these days the developers of Node.js have integrated <a href=\"https://www.npmjs.com/\">npm (Node Package Manager)</a> inside Node. It is a great utility tool that helps you automatically manage the dependencies of your projects. So, from now onwards you will get both software under one roof.</p>\n<p><img class=\"alignnone size-large wp-image-1227\" src=\"http://practice.codingsrc.com/wp-content/uploads/2020/03/npm-1024x493.png\" alt=\"\" width=\"1024\" height=\"493\" srcset=\"https://practice.codingsrc.com/wp-content/uploads/2020/03/npm-1024x493.png 1024w, https://practice.codingsrc.com/wp-content/uploads/2020/03/npm-300x144.png 300w, https://practice.codingsrc.com/wp-content/uploads/2020/03/npm-768x369.png 768w, https://practice.codingsrc.com/wp-content/uploads/2020/03/npm.png 1366w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p><strong>Download and Install Visual Studio Code</strong></p>\n<p>There are tons of code editors and IDE’s (Integrated Development Environment) that allows you to write JavaScript code. Among them, <a href=\"https://code.visualstudio.com/\">Visual Studio Code</a> is a popular choice of many Node.js developers. It is powered by the tech giant Microsoft and is completely free for personal or commercial use.</p>\n<p>It comes with a lot of advanced features that are necessary to increase the productivity of a programmer. Some of them include real-time debugging, IntelliSense, ability to add extensions as well as built-in support for version control using Git.</p>\n<p><img class=\"alignnone size-large wp-image-1228\" src=\"http://practice.codingsrc.com/wp-content/uploads/2020/03/visual_studio_code-1024x493.png\" alt=\"\" width=\"1024\" height=\"493\" srcset=\"https://practice.codingsrc.com/wp-content/uploads/2020/03/visual_studio_code-1024x493.png 1024w, https://practice.codingsrc.com/wp-content/uploads/2020/03/visual_studio_code-300x144.png 300w, https://practice.codingsrc.com/wp-content/uploads/2020/03/visual_studio_code-768x369.png 768w, https://practice.codingsrc.com/wp-content/uploads/2020/03/visual_studio_code.png 1366w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p><strong>Hello World Program Using Node.js</strong></p>\n<p>At this point, you have Node.js and Visual Studio Code installed on your computer. So, let’s get started by writing a hello world program.</p>\n<p>First of all, create a project directory where you will store all of your code files. For now, we’ll only create one file.</p>\n<p>Let’s name that file <strong>“index.js”</strong>, after all, it will contain JavaScript code. Now, put the below source code inside it and save the file.</p>\n<pre class=\"line-numbers\"><code class=\"language-javascript\">console.log('Hello World');</code></pre>\n<p>To see the above code in action, simply open a command prompt or terminal window in the project folder and execute the below command. It will display “Hello World” in the console.</p>\n<pre class=\"line-numbers\"><code class=\"language-javascript\">node index.js</code></pre>\n<p><strong>Mini Project</strong></p>\n<p><img class=\"alignnone size-large wp-image-1229\" src=\"http://practice.codingsrc.com/wp-content/uploads/2020/03/mini_project-1024x546.jpg\" alt=\"\" width=\"1024\" height=\"546\" srcset=\"https://practice.codingsrc.com/wp-content/uploads/2020/03/mini_project-1024x546.jpg 1024w, https://practice.codingsrc.com/wp-content/uploads/2020/03/mini_project-300x160.jpg 300w, https://practice.codingsrc.com/wp-content/uploads/2020/03/mini_project-768x409.jpg 768w, https://practice.codingsrc.com/wp-content/uploads/2020/03/mini_project.jpg 1366w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p>Node.js is packed with a lot of commonly used modules which allows us to do plenty of stuff. For example, it has an <strong>“http” </strong>module that provides us a head start if we want to create a server. This core module is mostly used when we develop web-based services using Node.js.</p>\n<p>Let’s move ahead and use it to set up a local server on our computer so that we can view some output in a web browser.</p>\n<p>At first, create a folder that will be used to hold this project’s source code files. Then, create a file named <strong>“server.js”</strong> where we’ll write the code. For now, type below code inside this file, I’ll explain it in a moment.</p>\n<pre class=\"line-numbers\"><code class=\"language-javascript\">const http = require('http')\r\nconst server = http.createServer((req, res) =&gt; {\r\n\tif (req.url === '/') {\r\n\t\tres.write('This output will display in a web browser')\r\n\t\tres.end()\r\n\t}\r\n})\r\nserver.listen(5000)\r\nconsole.log('Listening on port 5000')</code></pre>\n<p>At the beginning of the above code, I’ve included an “http” module which will be used to create localhost or a local development environment.</p>\n<p>Then, I created a server using createServer() method of http module. It accepts 2 parameters, one for “request” and another for a “response”.</p>\n<p>The request contains the metadata or the header that provides information like what page to visit etc. Whereas response is used to return data towards the user.</p>\n<p>In the conditional statement, I check the URL path of request and if it is from the root page then simply display output using write() function of response. Finally, I closed the response by calling its end() method.</p>\n<p>Later on, I ordered the Node.js server to listen on port 5000 and display a console message if everything works as expected. You may change the port if you like, but for the purpose of this tutorial, let&#8217;s use it as it is.</p>\n<p>It’s time to see our code in action. To do so, open the terminal inside the project folder and run the below command.</p>\n<pre class=\"line-numbers\"><code class=\"language-javascript\">node server.js</code></pre>\n<p>Now open below URL in any web browser to view the output of our mini-project.</p>\n<pre class=\"line-numbers\"><a href=\"http://localhost:5000/\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:5000/</a>\r\n</pre>\n<p><iframe src=\"https://repl.it/repls/PossibleCluelessMinimalsystem?lite=true\" width=\"100%\" height=\"400px\" frameborder=\"no\" scrolling=\"no\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\" allowfullscreen=\"allowfullscreen\"><span data-mce-type=\"bookmark\" style=\"display: inline-block; width: 0px; overflow: hidden; line-height: 0;\" class=\"mce_SELRES_start\">﻿</span></iframe></p>\n","featured_media":{"source_url":"https://practice.codingsrc.com/wp-content/uploads/2020/03/COVER.png"},"categories":[42],"excerpt":"<p>With the evolution of web development, faster and better technologies are coming day by day to enhance our workflow. Node.js is one of them. Previously,&#8230;</p>\n"}},"pageContext":{"slug":"node-js-tutorial-for-begginers-in-visual-studio-code"}}}